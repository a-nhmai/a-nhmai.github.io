[
  {
    "objectID": "Mini-Project2.html",
    "href": "Mini-Project2.html",
    "title": "Mini Project 2",
    "section": "",
    "text": "Information about Mini Project 2"
  },
  {
    "objectID": "Mini-Project2.html#checking-for-any-lists-with-less-than-5-elements",
    "href": "Mini-Project2.html#checking-for-any-lists-with-less-than-5-elements",
    "title": "Mini Project 2",
    "section": "Checking for any lists with less than 5 elements",
    "text": "Checking for any lists with less than 5 elements\n\nYears 2014-2017 do not have 5 tables like 2018-2024.\nAdditionally, 2020 did not have any data (likely because of COVID).\n\n\ncheck_year &lt;- function(years) {\n    problematic_years &lt;- list()  # List to store problematic years with fewer than 5 tables\n\n    for (year in years) {\n        Sys.sleep(2)  # Pause to avoid overloading the server\n        url &lt;- stringr::str_c(\"http://registration.baa.org/\", year, \"/cf/Public/iframe_Statistics.htm\")\n        \n        # Start polite session and scrape the webpage\n        session &lt;- bow(url, force = TRUE)\n        stats &lt;- scrape(session) |&gt;\n            html_nodes(css = \"table\")  # Scrape all tables\n        \n        # Check if there are exactly 5 tables\n        if (length(stats) &lt; 5) {\n            problematic_years[[length(problematic_years) + 1]] &lt;- \n                paste(\"Year\", year, \"doesn't have exactly 5 tables. Found\", length(stats), \"tables.\")\n        }\n    }\n    \n    # If there are any problematic years, print them; otherwise, print a success message\n    if (length(problematic_years) &gt; 0) {\n        message(\"Issues found in the following years:\")\n        print(problematic_years)\n    } else {\n        message(\"All years passed the table count check.\")\n    }\n}\n\nyear_test &lt;- 2014:2024\nyear_check &lt;- purrr::map(year_test, check_year)"
  },
  {
    "objectID": "Mini-Project2.html#checking-the-table-for-the-error-years",
    "href": "Mini-Project2.html#checking-the-table-for-the-error-years",
    "title": "Mini Project 2",
    "section": "Checking the table for the error years",
    "text": "Checking the table for the error years\n\nTable 4 is needed rather than table 5\n\n\nsession &lt;- bow(\"http://registration.baa.org/2014/cf/Public/iframe_Statistics.htm\", force = TRUE)\n\nresult &lt;- scrape(session) |&gt;\n  html_nodes(css = \"table\") |&gt;\n  html_table(header = TRUE, fill = TRUE)\n\nNo encoding supplied: defaulting to UTF-8.\n\nrunning &lt;- result[[4]]"
  },
  {
    "objectID": "Mini-Project2.html#code-that-provided-error-with-purrrmap-function-that-prompted-the-error-fixing-above",
    "href": "Mini-Project2.html#code-that-provided-error-with-purrrmap-function-that-prompted-the-error-fixing-above",
    "title": "Mini Project 2",
    "section": "Code that provided error with purrr:map function that prompted the error fixing above",
    "text": "Code that provided error with purrr:map function that prompted the error fixing above\n\nby_year &lt;- function(year){\n    Sys.sleep(2)\n    url &lt;- str_c(\"http://registration.baa.org/\", year, \"/cf/Public/iframe_Statistics.htm\")\n    session &lt;- bow(url, force = TRUE)\n    stats &lt;- scrape(session) |&gt;\n        html_nodes(css = \"table\") |&gt;\n        html_table(header = TRUE, fill = TRUE)\n    stats[[5]] |&gt; \n    dplyr::slice(c(3, 4, 5, 6)) |&gt;\n    janitor::clean_names() |&gt;\n    mutate(across(2:4, as.numeric),\n           percent_finished = parse_number(percent_finished),\n           year = year)\n    }\n\nyears &lt;- 2014:2024\n#boston_10yrs_data &lt;- purrr::map(years, check_year)\n#boston_10years &lt;- list_rbind(boston_10years_data)"
  },
  {
    "objectID": "Mini-Project2.html#new-code-for-dealing-with-abnormal-years",
    "href": "Mini-Project2.html#new-code-for-dealing-with-abnormal-years",
    "title": "Mini Project 2",
    "section": "New code for dealing with abnormal years",
    "text": "New code for dealing with abnormal years\n\nby_year2 &lt;- function(year) {\n    Sys.sleep(2)\n    \n    # Skip the year 2020\n    if (year == 2020) {\n        message(paste(\"Skipping year\", year))\n        return(NULL)  # Exit the function\n    }\n    \n    url &lt;- str_c(\"http://registration.baa.org/\", year, \"/cf/Public/iframe_Statistics.htm\")\n    session &lt;- bow(url, force = TRUE)\n    stats &lt;- scrape(session) |&gt;\n        html_nodes(css = \"table\") |&gt;\n        html_table(header = TRUE, fill = TRUE)\n    \n    # Select the appropriate table based on the year\n    if (year &gt;= 2014 & year &lt;= 2017) {\n        selected_table &lt;- stats[[4]]  # Use the 4th table for 2014-2017\n    } else {\n        selected_table &lt;- stats[[5]]  # Use the 5th table for all other years\n    }\n    \n    # Process the selected table\n    selected_table |&gt;\n        dplyr::slice(c(3, 4, 5, 6)) |&gt;\n        janitor::clean_names() |&gt;\n        mutate(across(2:4, as.numeric),\n               percent_finished = parse_number(percent_finished),\n               year = year)\n}\n\nyears &lt;- 2014:2024\n#boston_10yrs_data &lt;- purrr::map(years, by_year2)\n#boston_10years &lt;- list_rbind(boston_10years_data)"
  },
  {
    "objectID": "Mini-Project2.html#now-the-issue-is-that-non-binary-was-not-an-option-until-2022-causing-errors-in-the-slice-and-across-functions-fixed-code-for-this",
    "href": "Mini-Project2.html#now-the-issue-is-that-non-binary-was-not-an-option-until-2022-causing-errors-in-the-slice-and-across-functions-fixed-code-for-this",
    "title": "Mini Project 2",
    "section": "Now the issue is that non-binary was not an option until 2022, causing errors in the slice and across functions – fixed code for this",
    "text": "Now the issue is that non-binary was not an option until 2022, causing errors in the slice and across functions – fixed code for this\n\nby_year3 &lt;- function(year) {\n    Sys.sleep(2)\n    \n    # Skip the year 2020\n    if (year == 2020) {\n        message(paste(\"Skipping year\", year))\n        return(NULL)  # Exit the function\n    }\n    \n    url &lt;- stringr::str_c(\"http://registration.baa.org/\", year, \"/cf/Public/iframe_Statistics.htm\")\n    session &lt;- bow(url, force = TRUE)\n    stats &lt;- scrape(session) |&gt;\n        html_nodes(css = \"table\") |&gt;\n        html_table(header = TRUE, fill = TRUE)\n    \n    # Select the appropriate table based on the year\n    if (year &gt;= 2014 & year &lt;= 2017) {\n        selected_table &lt;- stats[[4]]  # Use the 4th table for 2014-2017\n    } else {\n        selected_table &lt;- stats[[5]]  # Use the 5th table for other years\n    }\n    \n    # Slice different rows based on the year range\n    if (year &gt;= 2014 & year &lt;= 2022) {\n        sliced_table &lt;- selected_table |&gt; \n            dplyr::slice(c(3, 4, 5))  # Slice rows 3 to 5 for 2014-2022\n    } else {\n        sliced_table &lt;- selected_table |&gt; \n            dplyr::slice(c(3, 4, 5, 6))  # Slice rows 3 to 6 for other years\n    }\n    \n    # Process the sliced table\n    sliced_table |&gt;\n        janitor::clean_names() |&gt;\n        mutate(across(2:4, as.numeric),\n               percent_finished = parse_number(percent_finished),\n               year = year)\n}\n\nyears &lt;- 2014:2024\nboston_10yrs_data &lt;- purrr::map(years, by_year3)\n\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\n\n\nSkipping year 2020\n\n\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\nNo encoding supplied: defaulting to UTF-8.\n\nboston_10years &lt;- list_rbind(boston_10yrs_data)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MaiPage",
    "section": "",
    "text": "Pronunciation  /on my/\nPronouns  she/her\nAbout  Prospective statistical ecology graduate student\n4th-year Environmental Studies Major (Natural Science) at St. Olaf College\nConcentrations in:  Statistics and Data Science  Race and Ethnic Studies\nConnect with me for more information about the construction of this website.\nDon’t like the theme? Click the switch on top right!"
  },
  {
    "objectID": "index.html#anh-mai",
    "href": "index.html#anh-mai",
    "title": "MaiPage",
    "section": "",
    "text": "Pronunciation  /on my/\nPronouns  she/her\nAbout  Prospective statistical ecology graduate student\n4th-year Environmental Studies Major (Natural Science) at St. Olaf College\nConcentrations in:  Statistics and Data Science  Race and Ethnic Studies\nConnect with me for more information about the construction of this website."
  },
  {
    "objectID": "Mini-Project1.html",
    "href": "Mini-Project1.html",
    "title": "Mini Project 1",
    "section": "",
    "text": "Information about Mini Project 1\n\nLoading in Data\n\n#This data is from the library ggplot2 to make the static versions of the maps. \nstates_polygon &lt;- as_tibble(map_data(\"state\")) |&gt;\n  select(region, group, order, lat, long)\n\n#This data is a simple features map for our interactive leaflet maps later on. \nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\")     \n\n#This data is from the following website and has species listings by state based\n#if the species' spatial range is believed to be associated with that state. \n#https://ecos.fws.gov/ecp/report/species-listings-by-state-totals?statusCategory=Listed\nspecies_states &lt;- read_csv(\"C:/Users/27mai/Documents/a-nhmai.github.io/data/species-listings-by-state-totals-report.csv\") \n\nRows: 58 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): State\ndbl (1): Number of Species Listings\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#This dataset is from the Poliscidata in R and I specifcally wanted to look at which states weed policies. \n#install.packages(\"poliscidata\") -- Use this code if you haven't installed the package. \nlibrary(poliscidata)\n\nRegistered S3 method overwritten by 'gdata':\n  method         from  \n  reorder.factor gplots\n\n#This data is needed to load in the pot policy variable from the \"states\" data from the \"Poliscidata\" package.\ndata(\"states\")\nweed_law_states &lt;- as.data.frame(states)\nweed_law_states &lt;- weed_law_states |&gt; \n  select(state, pot_policy) |&gt; \n  mutate(state = str_replace_all(state, \"(?&lt;!^)(?=[A-Z])\", \" \")) |&gt; #This adds a space before any capitalized letters. \n  mutate(state = str_trim(state)) #This gets rid of spaces at the beginning of the observations. \n\nData Filtering and Joining\n\n#For the species dataset, I wanted mainly the continental United States. \n  species_states &lt;- species_states |&gt;\n    group_by(State) |&gt;\n    filter(!State %in% c(\"Outlying Caribbean Islands\", \"Virgin Islands\", \"Outlying Pacific Islands\", \"Northern Mariana Islands\", \"American Samoa\", \"Guam\")) |&gt;\n    rename(numSpecies = `Number of Species Listings`)\n\n\n\nJoining the Species and Weed Law Data with the Mapping Data\n\n#Polygon Maps\n\n  #Joining the species by state data to the polygon data.\n  \n    #First I will check the formatting of the states to align keys. \n    unique(species_states$State)\n\n [1] \"Alaska\"               \"Alabama\"              \"Arkansas\"            \n [4] \"Arizona\"              \"California\"           \"Colorado\"            \n [7] \"Connecticut\"          \"District of Columbia\" \"Delaware\"            \n[10] \"Florida\"              \"Georgia\"              \"Hawaii\"              \n[13] \"Iowa\"                 \"Idaho\"                \"Illinois\"            \n[16] \"Indiana\"              \"Kansas\"               \"Kentucky\"            \n[19] \"Louisiana\"            \"Massachusetts\"        \"Maryland\"            \n[22] \"Maine\"                \"Michigan\"             \"Minnesota\"           \n[25] \"Missouri\"             \"Mississippi\"          \"Montana\"             \n[28] \"North Carolina\"       \"North Dakota\"         \"Nebraska\"            \n[31] \"New Hampshire\"        \"New Jersey\"           \"New Mexico\"          \n[34] \"Nevada\"               \"New York\"             \"Ohio\"                \n[37] \"Oklahoma\"             \"Oregon\"               \"Pennsylvania\"        \n[40] \"Puerto Rico\"          \"Rhode Island\"         \"South Carolina\"      \n[43] \"South Dakota\"         \"Tennessee\"            \"Texas\"               \n[46] \"Utah\"                 \"Virginia\"             \"Vermont\"             \n[49] \"Washington\"           \"Wisconsin\"            \"West Virginia\"       \n[52] \"Wyoming\"             \n\n    unique(states_polygon$region) #This one is all lowercase.\n\n [1] \"alabama\"              \"arizona\"              \"arkansas\"            \n [4] \"california\"           \"colorado\"             \"connecticut\"         \n [7] \"delaware\"             \"district of columbia\" \"florida\"             \n[10] \"georgia\"              \"idaho\"                \"illinois\"            \n[13] \"indiana\"              \"iowa\"                 \"kansas\"              \n[16] \"kentucky\"             \"louisiana\"            \"maine\"               \n[19] \"maryland\"             \"massachusetts\"        \"michigan\"            \n[22] \"minnesota\"            \"mississippi\"          \"missouri\"            \n[25] \"montana\"              \"nebraska\"             \"nevada\"              \n[28] \"new hampshire\"        \"new jersey\"           \"new mexico\"          \n[31] \"new york\"             \"north carolina\"       \"north dakota\"        \n[34] \"ohio\"                 \"oklahoma\"             \"oregon\"              \n[37] \"pennsylvania\"         \"rhode island\"         \"south carolina\"      \n[40] \"south dakota\"         \"tennessee\"            \"texas\"               \n[43] \"utah\"                 \"vermont\"              \"virginia\"            \n[46] \"washington\"           \"west virginia\"        \"wisconsin\"           \n[49] \"wyoming\"             \n\n    #Changing the keys to match.\n    species_states &lt;- species_states |&gt;\n      mutate(State = str_to_lower(State)\n      )\n    \n    #Now joining with a left_join\n    species_states_polygon &lt;- states_polygon |&gt; left_join(\n      species_states, \n      by = c(\"region\" = \"State\")\n    )\n    \n    #Checking if the states lined up\n    unique(species_states_polygon$region)\n\n [1] \"alabama\"              \"arizona\"              \"arkansas\"            \n [4] \"california\"           \"colorado\"             \"connecticut\"         \n [7] \"delaware\"             \"district of columbia\" \"florida\"             \n[10] \"georgia\"              \"idaho\"                \"illinois\"            \n[13] \"indiana\"              \"iowa\"                 \"kansas\"              \n[16] \"kentucky\"             \"louisiana\"            \"maine\"               \n[19] \"maryland\"             \"massachusetts\"        \"michigan\"            \n[22] \"minnesota\"            \"mississippi\"          \"missouri\"            \n[25] \"montana\"              \"nebraska\"             \"nevada\"              \n[28] \"new hampshire\"        \"new jersey\"           \"new mexico\"          \n[31] \"new york\"             \"north carolina\"       \"north dakota\"        \n[34] \"ohio\"                 \"oklahoma\"             \"oregon\"              \n[37] \"pennsylvania\"         \"rhode island\"         \"south carolina\"      \n[40] \"south dakota\"         \"tennessee\"            \"texas\"               \n[43] \"utah\"                 \"vermont\"              \"virginia\"            \n[46] \"washington\"           \"west virginia\"        \"wisconsin\"           \n[49] \"wyoming\"             \n\n  #Joining the weed laws with the polygon data using the\n  #same process.\n    \n    unique(weed_law_states$state)\n\n [1] \"Alaska\"         \"Alabama\"        \"Arkansas\"       \"Arizona\"       \n [5] \"California\"     \"Colorado\"       \"Connecticut\"    \"Delaware\"      \n [9] \"Florida\"        \"Georgia\"        \"Hawaii\"         \"Iowa\"          \n[13] \"Idaho\"          \"Illinois\"       \"Indiana\"        \"Kansas\"        \n[17] \"Kentucky\"       \"Louisiana\"      \"Massachusetts\"  \"Maryland\"      \n[21] \"Maine\"          \"Michigan\"       \"Minnesota\"      \"Missouri\"      \n[25] \"Mississippi\"    \"Montana\"        \"North Carolina\" \"North Dakota\"  \n[29] \"Nebraska\"       \"New Hampshire\"  \"New Jersey\"     \"New Mexico\"    \n[33] \"Nevada\"         \"New York\"       \"Ohio\"           \"Oklahoma\"      \n[37] \"Oregon\"         \"Pennsylvania\"   \"Rhode Island\"   \"South Carolina\"\n[41] \"South Dakota\"   \"Tennessee\"      \"Texas\"          \"Utah\"          \n[45] \"Virginia\"       \"Vermont\"        \"Washington\"     \"Wisconsin\"     \n[49] \"West Virginia\"  \"Wyoming\"       \n\n    weed_law_states &lt;- weed_law_states |&gt;\n      mutate(State = str_to_lower(state)\n      )\n    \n    weed_law_polygon &lt;- states_polygon |&gt; left_join(\n      weed_law_states, \n      by = c(\"region\" = \"State\")\n    )\n    \n    unique(weed_law_polygon$region)\n\n [1] \"alabama\"              \"arizona\"              \"arkansas\"            \n [4] \"california\"           \"colorado\"             \"connecticut\"         \n [7] \"delaware\"             \"district of columbia\" \"florida\"             \n[10] \"georgia\"              \"idaho\"                \"illinois\"            \n[13] \"indiana\"              \"iowa\"                 \"kansas\"              \n[16] \"kentucky\"             \"louisiana\"            \"maine\"               \n[19] \"maryland\"             \"massachusetts\"        \"michigan\"            \n[22] \"minnesota\"            \"mississippi\"          \"missouri\"            \n[25] \"montana\"              \"nebraska\"             \"nevada\"              \n[28] \"new hampshire\"        \"new jersey\"           \"new mexico\"          \n[31] \"new york\"             \"north carolina\"       \"north dakota\"        \n[34] \"ohio\"                 \"oklahoma\"             \"oregon\"              \n[37] \"pennsylvania\"         \"rhode island\"         \"south carolina\"      \n[40] \"south dakota\"         \"tennessee\"            \"texas\"               \n[43] \"utah\"                 \"vermont\"              \"virginia\"            \n[46] \"washington\"           \"west virginia\"        \"wisconsin\"           \n[49] \"wyoming\"             \n\n#Sf Maps, using the same process.    \n    \n  #Species data    \n  unique(states_sf$name)\n\n [1] \"Alabama\"              \"Alaska\"               \"Arizona\"             \n [4] \"Arkansas\"             \"California\"           \"Colorado\"            \n [7] \"Connecticut\"          \"Delaware\"             \"District of Columbia\"\n[10] \"Florida\"              \"Georgia\"              \"Hawaii\"              \n[13] \"Idaho\"                \"Illinois\"             \"Indiana\"             \n[16] \"Iowa\"                 \"Kansas\"               \"Kentucky\"            \n[19] \"Louisiana\"            \"Maine\"                \"Maryland\"            \n[22] \"Massachusetts\"        \"Michigan\"             \"Minnesota\"           \n[25] \"Mississippi\"          \"Missouri\"             \"Montana\"             \n[28] \"Nebraska\"             \"Nevada\"               \"New Hampshire\"       \n[31] \"New Jersey\"           \"New Mexico\"           \"New York\"            \n[34] \"North Carolina\"       \"North Dakota\"         \"Ohio\"                \n[37] \"Oklahoma\"             \"Oregon\"               \"Pennsylvania\"        \n[40] \"Rhode Island\"         \"South Carolina\"       \"South Dakota\"        \n[43] \"Tennessee\"            \"Texas\"                \"Utah\"                \n[46] \"Vermont\"              \"Virginia\"             \"Washington\"          \n[49] \"West Virginia\"        \"Wisconsin\"            \"Wyoming\"             \n[52] \"Puerto Rico\"         \n\n  unique(species_states$State)\n\n [1] \"alaska\"               \"alabama\"              \"arkansas\"            \n [4] \"arizona\"              \"california\"           \"colorado\"            \n [7] \"connecticut\"          \"district of columbia\" \"delaware\"            \n[10] \"florida\"              \"georgia\"              \"hawaii\"              \n[13] \"iowa\"                 \"idaho\"                \"illinois\"            \n[16] \"indiana\"              \"kansas\"               \"kentucky\"            \n[19] \"louisiana\"            \"massachusetts\"        \"maryland\"            \n[22] \"maine\"                \"michigan\"             \"minnesota\"           \n[25] \"missouri\"             \"mississippi\"          \"montana\"             \n[28] \"north carolina\"       \"north dakota\"         \"nebraska\"            \n[31] \"new hampshire\"        \"new jersey\"           \"new mexico\"          \n[34] \"nevada\"               \"new york\"             \"ohio\"                \n[37] \"oklahoma\"             \"oregon\"               \"pennsylvania\"        \n[40] \"puerto rico\"          \"rhode island\"         \"south carolina\"      \n[43] \"south dakota\"         \"tennessee\"            \"texas\"               \n[46] \"utah\"                 \"virginia\"             \"vermont\"             \n[49] \"washington\"           \"wisconsin\"            \"west virginia\"       \n[52] \"wyoming\"             \n\n  states_sf &lt;- states_sf |&gt;\n    mutate(name = str_to_lower(name))\n      \n  species_states_sf &lt;- states_sf |&gt;\n    left_join(species_states, by = c(\"name\" = \"State\"))\n  \n  unique(species_states_sf)\n\nSimple feature collection with 52 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -188.9049 ymin: 17.92956 xmax: -65.6268 ymax: 71.35163\nGeodetic CRS:  WGS 84\n# A tibble: 52 × 5\n   id    name                  density                       geometry numSpecies\n   &lt;chr&gt; &lt;chr&gt;                   &lt;dbl&gt;             &lt;MULTIPOLYGON [°]&gt;      &lt;dbl&gt;\n 1 01    alabama                 94.6  (((-87.3593 35.00118, -85.606…        143\n 2 02    alaska                   1.26 (((-131.602 55.11798, -131.56…          8\n 3 04    arizona                 57.0  (((-109.0425 37.00026, -109.0…         75\n 4 05    arkansas                56.4  (((-94.47384 36.50186, -90.15…         36\n 5 06    california             242.   (((-123.2333 42.00619, -122.3…        293\n 6 08    colorado                49.3  (((-107.9197 41.00391, -105.7…         38\n 7 09    connecticut            739.   (((-73.05353 42.03905, -71.79…         12\n 8 10    delaware               464.   (((-75.41409 39.80446, -75.50…         15\n 9 11    district of columbia 10065    (((-77.03526 38.99387, -76.90…          4\n10 12    florida                353.   (((-85.49714 30.99754, -85.00…        135\n# ℹ 42 more rows\n\n  #Weed Laws across states\n      \n  unique(states_sf$name)\n\n [1] \"alabama\"              \"alaska\"               \"arizona\"             \n [4] \"arkansas\"             \"california\"           \"colorado\"            \n [7] \"connecticut\"          \"delaware\"             \"district of columbia\"\n[10] \"florida\"              \"georgia\"              \"hawaii\"              \n[13] \"idaho\"                \"illinois\"             \"indiana\"             \n[16] \"iowa\"                 \"kansas\"               \"kentucky\"            \n[19] \"louisiana\"            \"maine\"                \"maryland\"            \n[22] \"massachusetts\"        \"michigan\"             \"minnesota\"           \n[25] \"mississippi\"          \"missouri\"             \"montana\"             \n[28] \"nebraska\"             \"nevada\"               \"new hampshire\"       \n[31] \"new jersey\"           \"new mexico\"           \"new york\"            \n[34] \"north carolina\"       \"north dakota\"         \"ohio\"                \n[37] \"oklahoma\"             \"oregon\"               \"pennsylvania\"        \n[40] \"rhode island\"         \"south carolina\"       \"south dakota\"        \n[43] \"tennessee\"            \"texas\"                \"utah\"                \n[46] \"vermont\"              \"virginia\"             \"washington\"          \n[49] \"west virginia\"        \"wisconsin\"            \"wyoming\"             \n[52] \"puerto rico\"         \n\n  unique(weed_law_states$State)\n\n [1] \"alaska\"         \"alabama\"        \"arkansas\"       \"arizona\"       \n [5] \"california\"     \"colorado\"       \"connecticut\"    \"delaware\"      \n [9] \"florida\"        \"georgia\"        \"hawaii\"         \"iowa\"          \n[13] \"idaho\"          \"illinois\"       \"indiana\"        \"kansas\"        \n[17] \"kentucky\"       \"louisiana\"      \"massachusetts\"  \"maryland\"      \n[21] \"maine\"          \"michigan\"       \"minnesota\"      \"missouri\"      \n[25] \"mississippi\"    \"montana\"        \"north carolina\" \"north dakota\"  \n[29] \"nebraska\"       \"new hampshire\"  \"new jersey\"     \"new mexico\"    \n[33] \"nevada\"         \"new york\"       \"ohio\"           \"oklahoma\"      \n[37] \"oregon\"         \"pennsylvania\"   \"rhode island\"   \"south carolina\"\n[41] \"south dakota\"   \"tennessee\"      \"texas\"          \"utah\"          \n[45] \"virginia\"       \"vermont\"        \"washington\"     \"wisconsin\"     \n[49] \"west virginia\"  \"wyoming\"       \n\n  weed_law_states_sf &lt;- states_sf |&gt;\n    left_join(weed_law_states, by = c(\"name\" = \"State\"))\n  \n  unique(weed_law_states_sf)\n\nSimple feature collection with 52 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -188.9049 ymin: 17.92956 xmax: -65.6268 ymax: 71.35163\nGeodetic CRS:  WGS 84\n# A tibble: 52 × 6\n   id    name                 density                  geometry state pot_policy\n   &lt;chr&gt; &lt;chr&gt;                  &lt;dbl&gt;        &lt;MULTIPOLYGON [°]&gt; &lt;chr&gt; &lt;fct&gt;     \n 1 01    alabama               9.47e1 (((-87.3593 35.00118, -8… Alab… Decrim    \n 2 02    alaska                1.26e0 (((-131.602 55.11798, -1… Alas… Medicinal \n 3 04    arizona               5.70e1 (((-109.0425 37.00026, -… Ariz… Medicinal \n 4 05    arkansas              5.64e1 (((-94.47384 36.50186, -… Arka… Not legal \n 5 06    california            2.42e2 (((-123.2333 42.00619, -… Cali… Medicinal…\n 6 08    colorado              4.93e1 (((-107.9197 41.00391, -… Colo… Medicinal…\n 7 09    connecticut           7.39e2 (((-73.05353 42.03905, -… Conn… Medicinal…\n 8 10    delaware              4.64e2 (((-75.41409 39.80446, -… Dela… Medicinal \n 9 11    district of columbia  1.01e4 (((-77.03526 38.99387, -… &lt;NA&gt;  &lt;NA&gt;      \n10 12    florida               3.53e2 (((-85.49714 30.99754, -… Flor… Pending l…\n# ℹ 42 more rows\n\n\n#Making the Numeric variable (static) map Data from [https://ecos.fws.gov/ecp/report/species-listings-by-state-totals?statusCategory=Listed%5D\n\nspecies_states_polygon |&gt;\n  ggplot(aes(x = long, y = lat, group = group))+\n  geom_polygon(aes(fill = numSpecies), color = \"black\")+\n  theme_void()+\n  scale_fill_viridis()+\n  labs(title = \"Listed species with current spatial range believed to or known to occur in states \\n across the US\",\n    fill = \"Number of listed species\",\n    subtitle = \"Data from https://ecos.fws.gov/ecp/report/species-listings-by-state-totals?statusCategory=Listed\",\n    caption = \"This map shows there is a high number of species believed to have spatial range \\n associated with California and regions in the South. More Northern regions have a lower number\\n of species listed. This data may be limited to sampling accessibility and data collection biases. \\nAdditionally, this map excludes Hawaii which has 490 listed species and Alaska with 8 listed species.\")\n\n\n\n\n\n\n\n\n#Making the Numeric Variable (interactive) map Data from [https://ecos.fws.gov/ecp/report/species-listings-by-state-totals?statusCategory=Listed%5D\n\n#I wanted to make labels that would show up when someone interacts with the map.\n#It coordinates to the name of the state as well as the number of species listed. \nspecies_states_sf &lt;- species_states_sf |&gt;\n  mutate(labels = str_c(name, \" - \", numSpecies, \" species listed\"))\n\nleaflet(species_states_sf) |&gt;\n  setView(-96, 37.8, 4) |&gt;\n  addTiles() |&gt;\n  addPolygons(\n    weight = 2,\n    opacity = 0.8,\n    color = \"black\",  \n    fillColor = ~colorNumeric(\"Greens\", numSpecies)(numSpecies),\n    dashArray = \"2\",\n    fillOpacity = 1,\n    highlightOptions = highlightOptions(\n      weight = 5,\n      color = \"#666\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE\n    ),\n    label = ~labels,  # Use the labels directly\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\"\n    )\n  ) |&gt;\n  addControl(\"&lt;strong&gt;Listed species with current spatial range believed to or known to occur in states across the US&lt;/strong&gt;\", position = \"topright\") |&gt;\n  addControl(\"From this map, we see a large concentration of species with current spatial ranges in California and southern regions of the United States. There is a possibility that more sampling occurs in these areas and can inflate species observations. Thus, this map should not be taken as a biodiversity distribution map.\", position = \"bottomleft\")\n\nWarning in sf::st_is_longlat(x): bounding box has potentially an invalid value\nrange for longlat data\n\n\n\n\n\n\n#Making the Categorical variable (static plot) map Data from R Package [Poliscidata]\nAlt-Text for this Plot\n\nThis is a map of the continental United States that shows the policy of weed by state. Lighter colors indicate legislation that is pending or has ruled for the illegalization of weed. Darker colors indicate the legalization of medicinal weed or entire decriminalization of weed. On the West coast, there is a pattern of decriminalization whereas most Midwestern or Southern states have ruled for weed to be illegal. On the East coast, near the New England area, more states are ruling for the decriminalization of cannibas as well.\n\n\nweed_law_polygon |&gt;\n  ggplot(aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = pot_policy), color = \"black\")+\n  coord_map() +\n  theme_void() +\n  scale_fill_manual(values = c(\"#ffffcc\", \"#c2e699\", \"#78c679\", \"#31a354\", \"#006837\"))+\n  labs(title = \"Weed Policy\",\n       caption = \"Data from R Package [Poliscidata]\",\n       fill = \"Status\")\n\n\n\n\n\n\n\n\n#Making the Categorical variable (interactive plot) map Data from R Package [Poliscidata]\n\nlibrary(RColorBrewer)\n\n# Define color palette based on pot_policy\nfactpal &lt;- colorFactor(\n  palette = c(\"#ffffcc\", \"#c2e699\", \"#78c679\", \"#31a354\", \"#006837\"),\n  domain = weed_law_states_sf$pot_policy\n)\n\n# Ensure weed_law_states_sf is in the correct projection (WGS84)\nweed_law_states_sf &lt;- st_transform(weed_law_states_sf, crs = 4326)\n\n# Define labels as a character vector, not a list\nlabels &lt;- paste(\n  \"&lt;strong&gt;\", weed_law_states_sf$state_name, \"&lt;/strong&gt;&lt;br/&gt;Policy: \", weed_law_states_sf$pot_policy\n)\n\nWarning: Unknown or uninitialised column: `state_name`.\n\n# Create leaflet map\nleaflet(weed_law_states_sf) |&gt;\n  setView(-96, 37.8, 4) |&gt;\n  addTiles() |&gt;\n  addPolygons(\n    weight = 2,\n    opacity = 1,\n    color = \"black\",\n    fillColor = ~factpal(pot_policy),\n    dashArray = \"3\",\n    fillOpacity = 0.7,\n    highlightOptions = highlightOptions(\n      weight = 5,\n      color = \"#666\",\n      dashArray = \"\",\n      fillOpacity = 0.7,\n      bringToFront = TRUE\n    ),\n    label = labels,  # Now a character vector\n    labelOptions = labelOptions(\n      style = list(\"font-weight\" = \"normal\", padding = \"3px 8px\"),\n      textsize = \"15px\",\n      direction = \"auto\"\n    )\n  ) |&gt;\n  addLegend(\n    pal = factpal,\n    values = ~pot_policy,\n    opacity = 0.7,\n    title = \"Weed Policy Status\",\n    position = \"bottomright\"\n  ) |&gt;\n  addControl(\"&lt;strong&gt;Weed Law Status across the U.S.&lt;/strong&gt;\", position = \"topright\") |&gt;\n  addControl(\"This map shows the weed law rulings across the U.S. Western states tend to have legalized and decriminalized weed, while Southern and Midwestern states often have illegal rulings or ongoing litigation.\", position = \"bottomright\")\n\nWarning in sf::st_is_longlat(x): bounding box has potentially an invalid value\nrange for longlat data"
  }
]